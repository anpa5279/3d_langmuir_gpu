#!/bin/bash

#PBS -A UCUB0166 
#PBS -N test
#PBS -q main
#PBS -j oe
#PBS -l job_priority=economy
#PBS -l walltime=0:30:00
#PBS -l select=1:ncpus=1:mpiprocs=4:ngpus=4:mem=384GB 
#PBS -l gpu_type=a100

# Use moar processes for precompilation to speed things up
export JULIA_NUM_PRECOMPILE_TASKS=1
export JULIA_NUM_THREADS=1

# Load critical modules
module reset
module load ncarenv nvhpc cuda cray-mpich

# Utter mystical incantations to perform various miracles
export MPICH_GPU_SUPPORT_ENABLED=1
export JULIA_MPI_HAS_CUDA=true
export PALS_TRANSFER=false
export JULIA_CUDA_MEMORY_POOL=none
which mpiexec
# Write down a script that binds MPI processes to GPUs (taken from Derecho documentation)
cat > launch.sh << EoF_s
#! /bin/bash

export MPICH_GPU_SUPPORT_ENABLED=1
export LOCAL_RANK=\${PMI_LOCAL_RANK}
export GLOBAL_RANK=\${PMI_RANK}
export CUDA_VISIBLE_DEVICES=\$(expr \${LOCAL_RANK} % 4)

echo "Global Rank \${GLOBAL_RANK} / Local Rank \${LOCAL_RANK} / CUDA_VISIBLE_DEVICES=\${CUDA_VISIBLE_DEVICES} / \$(hostname)"

exec \$*
EoF_s

chmod +x launch.sh

# Finally, let's run this thing
mpiexec -n 1 -ppn 4 ./launch.sh julia --project langmuir_turb.jl
