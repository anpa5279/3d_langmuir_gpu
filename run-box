#!/bin/bash

#PBS -A UCUB0166  
#PBS -N box-model
#PBS -j oe
#PBS -q main
#PBS -l job_priority=economy 
#PBS -l walltime=14:00:00
#PBS -l select=1:ncpus=64:mpiprocs=1

# Use moar processes for precompilation to speed things up
export JULIA_NUM_PRECOMPILE_TASKS=64
export JULIA_NUM_THREADS=64

# Load critical modules
module --force purge
module load ncarenv/23.09 gcc/12.2.0 openmpi/5.0.7

module list

# Utter mystical incantations to perform various miracles
unset MPICH_GPU_SUPPORT_ENABLED
unset MPICH_GPU_MANAGED_MEMORY_SUPPORT_ENABLED
unset CUDA_VISIBLE_DEVICES
export PALS_TRANSFER=false

# Write down a script that binds MPI processes to GPUs (taken from Derecho documentation)
cat > launch.sh << EoF_s
#! /bin/bash
export LOCAL_RANK=\${PMI_LOCAL_RANK}
export GLOBAL_RANK=\${PMI_RANK}

exec \$*

EoF_s

chmod +x launch.sh

# 1. Instantiate Julia environment
julia --project -e 'using Pkg; Pkg.instantiate()'
julia --project -e 'using Pkg; Pkg.add("MPI"); Pkg.add("MPIPreferences"); Pkg.add("Oceananigans"); Pkg.add("Printf")'
# 2. Set MPIPreferences for OpenMPI CPU
# 2. Reset and set MPIPreferences for OpenMPI CPU
julia --project -e 'using MPIPreferences; MPIPreferences.reset_preferences!()'
julia --project -e 'using MPIPreferences; MPIPreferences.use_system_binary(libmpi="libmpi.so", mpiexec="mpiexec", abi="OpenMPI")'
# 3. Build MPI in advance
julia --project -e 'using MPI'
# Finally, let's run this thing
