#!/bin/bash

#PBS -A UCUB0166 
#PBS -N boxmodel
#PBS -q develop
#PBS -j oe
###PBS -l job_priority=regular
#PBS -l walltime=00:30:00
#PBS -l select=1:ncpus=64:mpiprocs=1

rm -rf testing
mkdir testing

# Use moar processes for precompilation to speed things up
export JULIA_NUM_PRECOMPILE_TASKS=64
export JULIA_NUM_THREADS=64

# Load critical modules
module --force purge
module load ncarenv/23.09 nvhpc/24.7 cuda/12.2.1 cray-mpich/8.1.29

module list

# Utter mystical incantations to perform various miracles
export JULIA_CUDA_MEMORY_POOL=none

# Write down a script that binds MPI processes to GPUs (taken from Derecho documentation)
cat > launch.sh << EoF_s
#! /bin/bash

exec \$*
EoF_s

chmod +x launch.sh

# Tell MPI that we would like to use the system binary we loaded with module load cray-mpich
julia --project -e 'using Pkg; Pkg.instantiate()'
julia --project -e 'using MPIPreferences; MPIPreferences.use_system_binary(libmpi="libmpi.so", mpiexec="mpiexec", abi="OpenMPI")'
# Only need to run if you want to reset or update things (did you update the amount of  nodes and processors?)
# 2. Update packages to the environment that we need to use. not always necessary
julia --project -e 'using Pkg; Pkg.add("MPI"); Pkg.add("MPIPreferences"); Pkg.add("Oceananigans"); Pkg.add("Printf"); Pkg.add("OceanBioME")'
# Finally, let's run this thing
mpiexec ./launch.sh julia --project box-model.jl