#!/bin/bash

#PBS -A UCUB0166 
#PBS -N box-model
#PBS -q main
#PBS -j oe
#PBS -l job_priority=economy
#PBS -l walltime=12:00:00
#PBS -l select=1:ncpus=64:mpiprocs=64

##rm -rf outputs
mkdir outputs-testing64

# Set Julia threading (optional: for non-MPI threading)
export JULIA_NUM_THREADS=64 

# Load only CPU-relevant modules
module --force purge
module load ncarenv/23.09 cray-mpich/8.1.29

# Avoid all GPU-related settings
unset JULIA_MPI_HAS_CUDA
unset JULIA_CUDA_MEMORY_POOL
unset PALS_TRANSFER


# Write down a script that binds MPI processes to GPUs (taken from Derecho documentation)
cat > launch.sh << EoF_s
#! /bin/bash

exec \$*
EoF_s

chmod +x launch.sh

# Now to make our julia environment work:
# 1. Instantiate (we only need to do this once, but this also may be the first time you are running this code)
julia --project -e 'using Pkg; Pkg.instantiate()'
# 2. Add some packages to the environment that we need to use
julia --project -e 'using Pkg; Pkg.add("MPI"); Pkg.add("MPIPreferences"); Pkg.add("Oceananigans"); Pkg.add("OceanBioME")'
# 3. Tell MPI that we would like to use the system binary we loaded with module load cray-mpich
julia --project -e 'using MPIPreferences; MPIPreferences.use_system_binary(vendor="cray")'

# Finally, let's run this thing
mpiexec -n 64 ./launch.sh julia --project box-model.jl